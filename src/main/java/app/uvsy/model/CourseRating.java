package app.uvsy.model;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGenerateStrategy;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedTimestamp;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import lombok.Data;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Data
@DynamoDBTable(tableName = "courses-rating")
public class CourseRating {

    @DynamoDBHashKey(attributeName = "course_id")
    private String courseId;

    @DynamoDBAttribute(attributeName = "overall")
    private Map<String, Integer> overall;

    @DynamoDBAttribute(attributeName = "difficulty")
    private Map<String, Integer> difficulty;

    @DynamoDBAttribute(attributeName = "would_take_again")
    private int wouldTakeAgain;

    @DynamoDBAttribute(attributeName = "would_not_take_again")
    private int wouldNotTakeAgain;

    @DynamoDBAttribute(attributeName = "tags_rating")
    private List<TagRating> tagsRating;

    @DynamoDBAttribute(attributeName = "updated_at")
    @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.ALWAYS)
    private Date updatedAt;

    @DynamoDBAttribute(attributeName = "created_at")
    @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.CREATE)
    private Date createdAt;


    public CourseRating() {
        overall = new HashMap<>();
        difficulty = new HashMap<>();
        tagsRating = new ArrayList<>();
    }

    public CourseRating(String courseId) {
        this();
        this.courseId = courseId;
    }

    public void incrementWouldTakeAgain() {
        this.wouldTakeAgain++;
    }

    public void decrementWouldTakeAgain() {
        this.wouldTakeAgain--;
    }

    public void incrementWouldNotTakeAgain() {
        this.wouldNotTakeAgain++;
    }

    public void decrementWouldNotTakeAgain() {
        this.wouldNotTakeAgain--;
    }


}
